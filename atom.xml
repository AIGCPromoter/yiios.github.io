<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://www.yiios.com</id>
    <title>画家-个人简历</title>
    <updated>2024-10-23T07:42:49.587Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://www.yiios.com"/>
    <link rel="self" href="https://www.yiios.com/atom.xml"/>
    <logo>https://www.yiios.com/images/avatar.png</logo>
    <icon>https://www.yiios.com/favicon.ico</icon>
    <rights>All rights reserved 2024, 画家-个人简历</rights>
    <entry>
        <title type="html"><![CDATA[ChatGPT被封申诉教程]]></title>
        <id>https://www.yiios.com/post/chatgpt-bei-feng-shen-su-jiao-cheng/</id>
        <link href="https://www.yiios.com/post/chatgpt-bei-feng-shen-su-jiao-cheng/">
        </link>
        <updated>2024-03-27T06:22:09.000Z</updated>
        <content type="html"><![CDATA[<p>最近有很多客户有类似的情况（账号的plus会员还没到期账号被封禁了），这期我就教大家如何维权，原则上恢复账号，不行的话申请退款。</p>
<figure data-type="image" tabindex="1"><img src="https://www.yiios.com/post-images/1711521120191.png" alt="" loading="lazy"></figure>
<p>ChatGPT官方客服联系网址<br>
https://help.openai.com/en/</p>
<p>1、首先登录到openai 帮助中心（https://help.openai.com/en/），在帮助中心右下角里面有一个聊天小部件，在小部件里面发起工单，同时帮助中心里面也有相关教程。<br>
<img src="https://www.yiios.com/post-images/1711520659784.jpg" alt="" loading="lazy"></p>
<p>2、在小部件里面的message里面，发起工单对话。<br>
<img src="https://www.yiios.com/post-images/1711520667190.jpg" alt="" loading="lazy"></p>
<p>3、在对话里面选择Payment and Billing----Something else，接下来会出现一个对话框，可以在对话框里进行详细的描述和诉求。<br>
<img src="https://www.yiios.com/post-images/1711520672689.jpg" alt="" loading="lazy"></p>
<p>4、主要说明一下账户情况和相关诉求。因为客服回应很慢，而且有时差，往往是在半夜出现，建议留言的时候就把所有诉求以及联系方式说清楚。我这里有个两个模板大家可以借鉴一下（翻译可以用ChatGPT代劳）：</p>
<hr>
<p>首先说明账号信息（邮箱），什么情况（被封禁），说明账号被盗用，你不知情，并表示你在使用期间并没有违反openAI的相关规定。说明一下是多久开的plus，到期没有（如果到期了也没事，你账号被封了也会退），并表达希望贵方能进行调查，并恢复自己的账号，如果恢复不了就申请退款！最后表达一下感谢！</p>
<hr>
<p>你好，我有一些账单问题，我的邮箱地址是：[你的邮箱]。当我像往常一样登录时，发现我的账户被禁止了。这非常遗憾，因为我相信我是在合法合规地使用它的，并且我多次购买了PLUS服务。现在我的账户不可用了，我希望OPEN AI团队能够退还我本月支付的PLUS费用，总共[费用]美元。我是通过银行卡支付账单的，我用来支付的银行卡账户也是我本人的。如果需要，我也可以提供详细的付款信息。</p>
<figure data-type="image" tabindex="2"><img src="https://www.yiios.com/post-images/1711520680660.jpg" alt="" loading="lazy"></figure>
<p>5、等上几天后他们就会对你的工单进行回复，并让你提供相关信息，然后好进行退款事项。注意：用你被封禁的账号的邮箱跟他们给定的邮箱联系，并提供相关信息。</p>
<figure data-type="image" tabindex="3"><img src="https://www.yiios.com/post-images/1711520701596.jpg" alt="" loading="lazy"></figure>
<p>6、后面只需要跟他们进行邮件交流就行了，邮件一般回复的比较快，等你把相关信息发过去后他们确认后就会进行退款。</p>
<figure data-type="image" tabindex="4"><img src="https://www.yiios.com/post-images/1711520710738.jpg" alt="" loading="lazy"></figure>
<p>如果有ChatGPT使用/plus订阅等方面的问题，可以加我的微信:limo-on沟通交流解决。</p>
<figure data-type="image" tabindex="5"><img src="https://cardocr-1251789346.cos.ap-guangzhou.myqcloud.com/wx_qr.png" alt="" loading="lazy"></figure>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Mac 系统(M 系处理器)搭建幻兽帕鲁(palworld)服务器]]></title>
        <id>https://www.yiios.com/post/mac-xi-tong-m-xi-chu-li-qi-da-jian-huan-shou-pa-lu-palworldfu-wu-qi/</id>
        <link href="https://www.yiios.com/post/mac-xi-tong-m-xi-chu-li-qi-da-jian-huan-shou-pa-lu-palworldfu-wu-qi/">
        </link>
        <updated>2024-01-24T14:16:38.000Z</updated>
        <content type="html"><![CDATA[<!-- more -->
<h2 id="环境准备">环境准备</h2>
<ol>
<li>下载安装docker，https://www.docker.com/。</li>
<li>修改 docker desktop 中的 Settings - Resources ，把CPU Limit拉满，Memory Limit 拉到给剩2-3G接近满值，Swap拉满，保存。</li>
<li>创建一个文件夹，例如：<code>palworld-arm-docker</code>，在里面创建一个空的子文件夹 <code>palworld</code>。</li>
</ol>
<h2 id="docker-compose">docker-compose</h2>
<p>在 <code>palworld-arm-docker</code> 文件夹下面创建 <code>docker-compose.yml</code> 文件。<br>
<code>mem_limit</code>视自己的刚才的<code>Memory Limit</code>调整，比如<code>Memory Limit</code>是14G，那么<code>mem_limit</code>就设定为13G，这样可以在内存泄露严重时自动重启容器。</p>
<pre><code>version: '3'
services:
  pal:
    image: czy0612/palworld-server
    restart: always
    mem_limit: 13g
    container_name: pal
    ports:
      - 8211:8211/udp
      - 25575:25575/tcp
    volumes:
      - ./PalWorldSettings.ini:/home/steam/Steam/steamapps/common/PalServer/Pal/Saved/Config/LinuxServer/PalWorldSettings.ini
      - ./palworld:/home/steam/Steam/steamapps/common/PalServer/
</code></pre>
<h2 id="palgameworldsettings游戏配置">PalGameWorldSettings(游戏配置)</h2>
<p>在 <code>palworld-arm-docker</code> 文件夹下面创建 <code>PalWorldSettings.ini</code> 文件。</p>
<p>官方文档：https://tech.palworldgame.com/optimize-game-balance<br>
配置生成器：https://dysoncheng.github.io/PalWorldSettingGenerator/setting.html</p>
<p>默认配置如下，如何修改可以参考上面两个网页：</p>
<pre><code>[/Script/Pal.PalGameWorldSettings]
OptionSettings=(Difficulty=None,DayTimeSpeedRate=1.000000,NightTimeSpeedRate=1.000000,ExpRate=1.000000,PalCaptureRate=1.000000,PalSpawnNumRate=1.000000,PalDamageRateAttack=1.000000,PalDamageRateDefense=1.000000,PlayerDamageRateAttack=1.000000,PlayerDamageRateDefense=1.000000,PlayerStomachDecreaceRate=1.000000,PlayerStaminaDecreaceRate=1.000000,PlayerAutoHPRegeneRate=1.000000,PlayerAutoHpRegeneRateInSleep=1.000000,PalStomachDecreaceRate=1.000000,PalStaminaDecreaceRate=1.000000,PalAutoHPRegeneRate=1.000000,PalAutoHpRegeneRateInSleep=1.000000,BuildObjectDamageRate=1.000000,BuildObjectDeteriorationDamageRate=1.000000,CollectionDropRate=1.000000,CollectionObjectHpRate=1.000000,CollectionObjectRespawnSpeedRate=1.000000,EnemyDropItemRate=1.000000,DeathPenalty=All,bEnablePlayerToPlayerDamage=False,bEnableFriendlyFire=False,bEnableInvaderEnemy=True,bActiveUNKO=False,bEnableAimAssistPad=True,bEnableAimAssistKeyboard=False,DropItemMaxNum=3000,DropItemMaxNum_UNKO=100,BaseCampMaxNum=128,BaseCampWorkerMaxNum=15,DropItemAliveMaxHours=1.000000,bAutoResetGuildNoOnlinePlayers=False,AutoResetGuildTimeNoOnlinePlayers=72.000000,GuildPlayerMaxNum=20,PalEggDefaultHatchingTime=72.000000,WorkSpeedRate=1.000000,bIsMultiplay=False,bIsPvP=False,bCanPickupOtherGuildDeathPenaltyDrop=False,bEnableNonLoginPenalty=True,bEnableFastTravel=True,bIsStartLocationSelectByMap=True,bExistPlayerAfterLogout=False,bEnableDefenseOtherGuildPlayer=False,CoopPlayerMaxNum=4,ServerPlayerMaxNum=32,ServerName=&quot;Default Palworld Server&quot;,ServerDescription=&quot;&quot;,AdminPassword=&quot;123456&quot;,ServerPassword=&quot;&quot;,PublicPort=8211,PublicIP=&quot;&quot;,RCONEnabled=True,RCONPort=25575,Region=&quot;&quot;,bUseAuth=True,BanListURL=&quot;https://api.palworldgame.com/api/banlist.txt&quot;)
</code></pre>
<h2 id="运行">运行</h2>
<ol>
<li>终端中 cd 到 <code>palworld-arm-docker</code> 文件夹目录下</li>
<li>拉取 docker 镜像<code>docker-compose pull</code></li>
<li>运行 <code>docker-compose up -d</code></li>
<li>等待30秒后 <code>sudo docker logs pal</code><br>
看到如下信息说明服务器配置好了，马上可以冲了！</li>
</ol>
<pre><code>dlopen failed trying to load:
steamclient.so
with error:
steamclient.so: cannot open shared object file: No such file or directory
[S_API] SteamAPI_Init(): Loaded '/home/steam/.steam/sdk64/steamclient.so' OK.  (First tried local 'steamclient.so')
CAppInfoCacheReadFromDiskThread took 29 milliseconds to initialize
Setting breakpad minidump AppID = 2394010
[S_API FAIL] Tried to access Steam interface SteamUser021 before SteamAPI_Init succeeded.
[S_API FAIL] Tried to access Steam interface SteamFriends017 before SteamAPI_Init succeeded.
[S_API FAIL] Tried to access Steam interface STEAMAPPS_INTERFACE_VERSION008 before SteamAPI_Init succeeded.
[S_API FAIL] Tried to access Steam interface SteamNetworkingUtils004 before SteamAPI_Init succeeded.
</code></pre>
<h2 id="网络配置">网络配置</h2>
<p>如果你能拿到公网ip，看端口映射章节，拿不到公网ip看内网穿透章节。</p>
<h3 id="端口映射">端口映射</h3>
<ol>
<li>路由上给 Mac 终端指定一个ip</li>
<li>虚拟服务器/端口映射上，配置Mac终端映射端口8211(协议UDP)/25575(协议TCP)</li>
</ol>
<h3 id="frp内网穿透">FRP内网穿透</h3>
<p>FRP教程我这里就不在赘述了，这里使用的是0.52.3版本。下面有一份配置可供参考。</p>
<p>frps配置参考：</p>
<pre><code>bindPort = 7001 #{必选} 客户端与该端口建立连接
transport.tls.enable = true

#身份验证
auth.method = &quot;token&quot;  #{可选}身份验证方式
auth.token = &quot;123456&quot; #token设置密码，用于通过身份验证创建连接

#frp服务仪表板配置
webServer.port = 17300  #{也可自行修改端口}
webServer.addr = &quot;0.0.0.0&quot; #公网ip或者域名
webServer.user = &quot;user&quot; #登录用户名{可自行修改}
webServer.password = &quot;password&quot; #登录密码{可自行修改}
</code></pre>
<p>frpc配置参考：</p>
<pre><code>serverAddr = &quot;114.114.115.115&quot; #填写你的frps服务器
serverPort = 7001 #填写你的frps服务的端口
auth.token = &quot;123456&quot;
transport.tls.enable = true

[[proxies]]
name = &quot;palworld-ucp&quot;
type = &quot;udp&quot;
localIP = &quot;127.0.0.1&quot;
localPort = 8211
remotePort = 8211

[[proxies]]
name = &quot;palworld-rcon&quot;
type = &quot;tcp&quot;
localIP = &quot;127.0.0.1&quot;
localPort = 25575
remotePort = 25575
</code></pre>
<h2 id="游戏运维">游戏运维</h2>
<h3 id="rcon服务器指令">RCON服务器指令</h3>
<p>工具：<br>
https://github.com/gorcon/rcon-cli</p>
<p>用法示例，12345为之前设置的游戏参数<code>AdminPassword</code>，根据实际情况修改：</p>
<pre><code>./rcon -a 114.114.115.115:25575 -p 123456
</code></pre>
<p>服务器命令表：<br>
https://tech.palworldgame.com/server-commands</p>
<h3 id="存档备份">存档备份</h3>
<h4 id="备份配置">备份配置</h4>
<p>目前游戏不太稳定，炸档情况偶有发生，所以最好定时备份存档，这样在出问题时可以快速回滚。</p>
<ol>
<li>在 <code>palworld-arm-docker</code> 文件夹下面创建 <code>back</code> 文件夹。</li>
<li>在 <code>palworld-arm-docker</code> 文件夹下面创建 <code>back.sh</code> 文件（注意按照你<code>palworld-arm-docker</code> 文件夹的实际路径对脚本中的路径进行修改）：</li>
</ol>
<pre><code>#!/bin/bash

# 备份文件名
t=$(date +%Y-%m-%d-%H-%M-%S).zip
echo $t

# 备份文件存放路径，此处注意
zip_path=/Users/Admin/Server/palworld-arm-docker/back/$t

# 压缩指定目录为zip
zip -r -q $zip_path /Users/Admin/Server/palworld-arm-docker/palworld/Pal/Saved/*

# 遍历并删除3天之前的文件
back_path=/Users/Admin/Server/palworld-arm-docker/back/

# 获取当前时间戳
current_time=$(date +%s)

# 遍历back路径下的文件
for file in $back_path*
do
    # 检查文件的修改时间
    modified_time=$(stat -f %m $file)
    
    # 计算文件的时间差（以秒为单位）
    time_diff=$((current_time - modified_time))
    
    # 判断文件是否超过3天未修改
    if [ $time_diff -gt $((3 * 24 * 60 * 60)) ]
    then
        # 删除文件
        rm $file
    fi
done
</code></pre>
<ol start="3">
<li>在终端中，输入命令 <code>crontab -e</code> 开始编辑定时任务，在编辑界面中按<code>i</code>进入输入状态，输入下面的指令（注意按照你<code>palworld-arm-docker</code> 文件夹的实际路径对脚本中的路径进行修改）</li>
</ol>
<pre><code>*/30 * * * * /bin/bash /Users/Admin/Server/palworld-arm-docker/back.sh
</code></pre>
<p>按<code>esc</code>退出输入状态，输入<code>:wq</code>保存文件并退出。如果此时有弹窗提示是否同意，点击同意。<br>
系统会在每个小时的0分和30分钟备份一次存档。</p>
<h4 id="回滚存档">回滚存档</h4>
<p>一旦发生不幸，可以开始回滚存档。</p>
<ol>
<li>终端 <code>cd</code> 进入<code>palworld-arm-docker</code>文件夹下，停止 docker 容器<code>docker-compose down</code></li>
<li>将之前的备份解压，确认成功解压后</li>
<li>进入 <code>/Users/Admin/Server/palworld-arm-docker/palworld/Pal/Saved/</code> 目录下，压缩备份当前的坏存档，之后删除<code>Saved</code>文件夹下的所有文件。</li>
<li>将之前解压好的备份移到<code>Saved</code>文件夹下</li>
<li>终端中启动 docker 容器<code>docker-compose up -d</code></li>
</ol>
<h3 id="更新版本">更新版本</h3>
<p>此docker镜像有自动更新机制，如果服务端有新的更新，会在 docker 容器启动时自动更新游戏。</p>
<ol>
<li>终端 <code>cd</code> 进入<code>palworld-arm-docker</code>文件夹下，停止 docker 容器<code>docker-compose down</code></li>
<li>终端中启动 docker 容器<code>docker-compose up -d</code></li>
<li>使用 <code>sudo docker logs pal</code> 查看更新进度和是否启动部署成功</li>
</ol>
<h2 id="补充">补充</h2>
<ol>
<li>设置ServerPassword的话，无法直接输入ip+端口加入房间，必须要曲线救国，最好别设置。</li>
<li>帕鲁服务端目前非常吃配置，机器内存不建议低于16G。</li>
<li>帕鲁服务端目前非常吃配置，frps服务器的带宽也很重要，想流畅不卡最少一个在线用户要分到1M的带宽。</li>
<li>此docker容器的root密码为：steamcmd</li>
</ol>
<p>看到最后麻烦给我点个赞！</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[构建高性能 Prompt 之路——结构化 Prompt]]></title>
        <id>https://www.yiios.com/post/gou-jian-gao-xing-neng-prompt-zhi-lu-jie-gou-hua-prompt/</id>
        <link href="https://www.yiios.com/post/gou-jian-gao-xing-neng-prompt-zhi-lu-jie-gou-hua-prompt/">
        </link>
        <updated>2023-08-01T12:52:42.000Z</updated>
        <content type="html"><![CDATA[<ul>
<li>作者：<a href="https://www.zhihu.com/people/zphyix">云中江树</a></li>
<li>微信：zephyr_ai (添加请说明来意)</li>
<li>相关项目：<a href="https://github.com/yzfly/LangGPT">LangGPT</a></li>
<li>文章状态：不定期更新中</li>
</ul>
<h2 id="前言">前言</h2>
<p>我算是最早在国内提结构化、模板化编写大模型 Prompt 范式的人之一。2023 年 4 月在我自己的个人实践中发现这种结构化、模板化的方式对编写 prompt 十分友好，并且在大多数时候都表现不俗。2023 年 5 月份我将这种方法开源成 LangGPT 项目并在国内写文公开，受到了许多人的认可和喜爱，尤其在 GitHub、即刻、知乎等社区都有不小的反响。由于结构化 Prompt 的出色性能表现，很多朋友都开始在实践中应用这种方法写 Prompt ，其中不乏许多来自网易字节等互联网大厂的朋友。</p>
<p>虽然结构化 prompt 的思想目前已经广为传播并应用，但是缺乏全面系统的资料。虽然也有许多解读文章传播，但内容质量良莠不齐，并且知识也较为破碎。于是写作本文，希望能成为一篇较为系统的高质量的结构化 Prompt 论述文章，为学习 Prompt 编写的朋友提供一些参考借鉴。</p>
<h2 id="什么是结构化-prompt">什么是结构化 Prompt ？</h2>
<p>结构化的思想很普遍，结构化内容也很普遍，我们日常写作的文章，看到的书籍都在使用标题、子标题、段落、句子等语法结构。<strong>结构化 Prompt 的思想通俗点来说就是像写文章一样写 Prompt。</strong></p>
<p>为了阅读、表达的方便，我们日常有各种写作的模板，用来控制内容的组织呈现形式。例如古代的八股文、现代的简历模板、学生实验报告模板、论文模板等等模板。所以结构化编写 Prompt 自然也有各种各样优质的模板帮助你把 Prompt 写的更轻松、性能更好。所以写<strong>结构化 Prompt 可以有各种各样的模板，你可以像用 PPT 模板一样选择或创造自己喜欢的模板。</strong></p>
<p>在这之前，虽然也有类似结构化思想，但是更多体现在思维上，缺乏在 prompt 上的具体体现。</p>
<p>例如知名的 <a href="https://github.com/mattnigh/ChatGPT3-Free-Prompt-List">CRISPE 框架</a>，CRISPE 分别代表以下含义：</p>
<ul>
<li>CR： Capacity and Role（能力与角色）。你希望 ChatGPT 扮演怎样的角色。</li>
<li>I： Insight（洞察力），背景信息和上下文（坦率说来我觉得用 Context 更好）。</li>
<li>S： Statement（指令），你希望 ChatGPT 做什么。</li>
<li>P： Personality（个性），你希望 ChatGPT 以什么风格或方式回答你。</li>
<li>E： Experiment（尝试），要求 ChatGPT 为你提供多个答案。</li>
</ul>
<p>最终写出来的 Prompt 是这样的：</p>
<pre><code>Act as an expert on software development on the topic of machine learning frameworks, and an expert blog writer. The audience for this blog is technical professionals who are interested in learning about the latest advancements in machine learning. Provide a comprehensive overview of the most popular machine learning frameworks, including their strengths and weaknesses. Include real-life examples and case studies to illustrate how these frameworks have been successfully used in various industries. When responding, use a mix of the writing styles of Andrej Karpathy, Francois Chollet, Jeremy Howard, and Yann LeCun.
</code></pre>
<p>这类思维框架只呈现了 Prompt 的内容框架，但没有提供模板化、结构化的 prompt 形式。</p>
<p>而我们所提倡的结构化、模板化 Prompt，写出来是这样的：</p>
<blockquote>
<p>该示例来自 LangGPT 项目: https://github.com/yzfly/LangGPT/blob/main/README_zh.md</p>
</blockquote>
<pre><code># Role: 诗人

## Profile

- Author: YZFly
- Version: 0.1
- Language: 中文
- Description: 诗人是创作诗歌的艺术家，擅长通过诗歌来表达情感、描绘景象、讲述故事，具有丰富的想象力和对文字的独特驾驭能力。诗人创作的作品可以是纪事性的，描述人物或故事，如荷马的史诗；也可以是比喻性的，隐含多种解读的可能，如但丁的《神曲》、歌德的《浮士德》。

### 擅长写现代诗
1. 现代诗形式自由，意涵丰富，意象经营重于修辞运用，是心灵的映现
2. 更加强调自由开放和直率陈述与进行“可感与不可感之间”的沟通。

### 擅长写七言律诗
1. 七言体是古代诗歌体裁
2. 全篇每句七字或以七字句为主的诗体
3. 它起于汉族民间歌谣

### 擅长写五言诗
1. 全篇由五字句构成的诗
2. 能够更灵活细致地抒情和叙事
3. 在音节上，奇偶相配，富于音乐美

## Rules
1. 内容健康，积极向上
2. 七言律诗和五言诗要押韵

## Workflow
1. 让用户以 &quot;形式：[], 主题：[]&quot; 的方式指定诗歌形式，主题。
2. 针对用户给定的主题，创作诗歌，包括题目和诗句。

## Initialization
作为角色 &lt;Role&gt;, 严格遵守 &lt;Rules&gt;, 使用默认 &lt;Language&gt; 与用户对话，友好的欢迎用户。然后介绍自己，并告诉用户 &lt;Workflow&gt;。
</code></pre>
<p>基于上述 <code>诗人</code> prompt 例子，说明结构化 prompt 的几个概念：</p>
<ul>
<li><strong>标识符</strong>：<code>#</code>, <code>&lt;&gt;</code> 等符号(<code>-</code>, <code>[]</code>也是)，这两个符号依次标识<code>标题</code>,<code>变量</code>，控制内容层级，用于标识层次结构。</li>
<li><strong>属性词</strong>：<code>Role</code>, <code>Profile</code>, <code>Initialization</code> 等等，属性词包含语义，是对模块下内容的总结和提示，用于标识语义结构。</li>
</ul>
<p>日常的文章结构是通过字号大小、颜色、字体等样式来标识的，ChatGPT 接收的输入没有样式，因此借鉴 markdown，yaml 这类标记语言的方法或者 json 这类数据结构实现 prompt 的结构表达都可以，例如用标识符 <code>#</code> 标识一级标题，<code>##</code>标识二级标题，以此类推。<strong>尤其是使用 json， yaml 这类成熟的数据结构，对 prompt 进行工程化开发特别友好。</strong></p>
<p>LangGPT 目前选用的是 Markdown 标记语法，一是因为 ChatGPT 网页版本身就支持 Markdown 格式，二是希望对非程序员朋友使用更加友好。程序员朋友推荐使用yaml, json 等进行结构化 prompt 开发。</p>
<p><code>属性词</code>好理解，和学术论文中使用的<code>摘要</code>，<code>方法</code>，<code>实验</code>，<code>结论</code>的段落标题起的作用一样。</p>
<p><code>标识符</code>，<code>属性词</code>都是可替换的，可以替换为你喜欢的符号和内容。</p>
<p>结构化 prompt 直观上和传统的 prompt 方式差异就很大，那么为什么提倡结构化方式编写 Prompt 呢？</p>
<h2 id="结构化-prompt-的优势">结构化 Prompt 的优势</h2>
<p>优势太多了，说一千道一万，<strong>归根结底还是结构化、模板化 Prompt 的性能好！</strong></p>
<p>这一点已经在许多朋友的日常使用甚至商业应用中得到证明。许多企业，乃至网易、字节这样的互联网大厂都在使用结构化 Prompt！</p>
<p>此外结构化、模板化 Prompt 还有许多优势，<strong>这些优势某种意义上又是其在实际使用时表现卓越的原因。</strong></p>
<h3 id="优势一层级结构内容与形式统一">优势一：层级结构：内容与形式统一</h3>
<h4 id="结构清晰可读性好">结构清晰，可读性好</h4>
<p>结构化方式编写出来的 Prompt 层级结构十分清晰，将结构在形式上和内容上统一了起来，<strong>可读性很好</strong>。</p>
<ul>
<li><code>Role (角色)</code> 作为 Prompt 标题统摄全局内容。</li>
<li><code>Profile (简介)</code>、<code>Rules（规则）</code> 作为二级标题统摄相应的局部内容。</li>
<li><code>Language</code>、<code>Description</code> 作为关键词统摄相应句子、段落。</li>
</ul>
<h4 id="结构丰富表达性好">结构丰富，表达性好</h4>
<p>CRISPE 这类框架命中注定结构简单，因为过于复杂将难以记忆，大大降低实操性，因此其往往只有一层结构，这限制了 Prompt 的表达。</p>
<p>结构化 prompt 的结构由形式控制，完全没有记忆负担。只要模型能力支持，可以做到二层，三层等更多、更丰富的层级结构。</p>
<p>那么为什么要用更丰富的结构？这么做有什么好处呢？</p>
<p>这种方式写出来的 Prompt <strong>符合人类的表达习惯</strong>，与我们日常写文章时有标题、段落、副标题、子段落等丰富的层级结构是一样的。</p>
<p>这种方式写出来的 Prompt <strong>符合 ChatGPT 的认知习惯</strong>，因为 ChatGPT 正是在大量的文章、书籍中训练得到，其训练内容的层级结构本来就是十分丰富的。</p>
<h3 id="优势二提升语义认知">优势二：提升语义认知</h3>
<p>结构化表达同时降低了人和 GPT 模型的认知负担，<strong>大大提高了人和GPT模型对 prompt 的语义认知。</strong> 对人来说，Prompt 内容一目了然，语义清晰，只需要依样画瓢写 Prompt 就行。如果使用 LangGPT 提供的 Prompt 生成助手，还可以帮你生成高质量的初版 Prompt。</p>
<p>生成的初版 Prompt 足以应对大部分日常场景，生产级应用场景下的 prompt 也可以在这个初版 prompt 基础上进行迭代优化得到，能够大大降低编写 prompt 的任务量。</p>
<p>对 GPT 模型来说，<strong>标识符标识的层级结构实现了聚拢相同语义，梳理语义的作用，降低了模型对 Prompt 的理解难度</strong>，便于模型理解 prompt 语义。</p>
<p><strong>属性词实现了对 prompt 内容的语义提示和归纳作用，缓解了 Prompt 中不当内容的干扰。</strong> 使用属性词与 prompt 内容相结合，实现了局部的总分结构，便于模型提纲挈领的获得 prompt 整体语义。</p>
<h3 id="优势三定向唤醒大模型深度能力">优势三：定向唤醒大模型深度能力</h3>
<p><strong>使用特定的属性词能够确保定向唤醒模型的深层能力。</strong></p>
<p>实践发现让模型扮演某个角色其能大大提高模型表现，所以一级标题设置的就是 <code>Role</code>（角色） 属性词，直接将 Prompt 固定为角色，确保定向唤醒模型的角色扮演能力。也可使用 <code>Expert</code>（专家）, <code>Master</code>(大师)等提示词替代 <code>Role</code>，将 Prompt 固定为某一领域专家。</p>
<p>再比如 <code>Rules</code>，规定了模型必须尽力去遵守的规则。比如在这里添加不准胡说八道的规则，缓解大模型幻觉问题。添加输出内容必须积极健康的规则，缓解模型输出不良内容等。用 <code>Constraints</code>(约束)，中文的 <code>规则</code> 等词替代也可。</p>
<p>下面是示例 Prompt 中使用到的一些属性词介绍：</p>
<pre><code># Role: 设置角色名称，一级标题，作用范围为全局

## Profile: 设置角色简介，二级标题，作用范围为段落

- Author: yzfly    设置 Prompt 作者名，保护 Prompt 原作权益
- Version: 1.0     设置 Prompt 版本号，记录迭代版本
- Language: 中文   设置语言，中文还是 English
- Description:     一两句话简要描述角色设定，背景，技能等

### Skill:  设置技能，下面分点仔细描述
1. xxx
2. xxx


## Rules        设置规则，下面分点描述细节
1. xxx
2. xxx

## Workflow     设置工作流程，如何和用户交流，交互
1. 让用户以 &quot;形式：[], 主题：[]&quot; 的方式指定诗歌形式，主题。
2. 针对用户给定的主题，创作诗歌，包括题目和诗句。

## Initialization  设置初始化步骤，强调 prompt 各内容之间的作用和联系，定义初始化行为。
作为角色 &lt;Role&gt;, 严格遵守 &lt;Rules&gt;, 使用默认 &lt;Language&gt; 与用户对话，友好的欢迎用户。然后介绍自己，并告诉用户 &lt;Workflow&gt;。
</code></pre>
<p>好的属性词也很关键，你可以定义、添加、修改自己的属性词。</p>
<h3 id="优势四像代码开发一样构建生产级-prompt">优势四：像代码开发一样构建生产级 Prompt</h3>
<p>代码是调用机器能力的工具， Prompt 是调用大模型能力的工具。<strong>Prompt 越来越像新时代的编程语言。</strong> 这一观点我在之前的文章中也提过，并获得了许多朋友的认同。</p>
<p>在生产级 AIGC 应用的开发中，<strong>结构化 prompt 使得 prompt 的开发也像代码开发一样有规范。</strong> 结构化 Prompt 的规范可以多种多样，用 json，yaml 实现都可以，GitHub 用户 <a href="https://github.com/ZhangHanDong">ZhangHanDong</a> 甚至还专门为 Prompt 设计了描述语言 <a href="https://github.com/ZhangHanDong/prompt-description-language">prompt-description-language</a>。</p>
<p><strong>结构化 Prompt 的这些规范，这些模块化设计，能够大大便利于 prompt 后续的维护升级，便利于多人协同开发设计。</strong> 这一点程序员群体应该深有感受。</p>
<p>想象一下，你是某公司一名 prompt 工程师，某一个或多个 prompt 因为某些原因（前任离职或调岗）需要你负责维护升级，你是更喜欢面对结构化的 Prompt 还是非结构化的 Prompt 呢？结构化 Prompt 是<code>自带使用文档</code> 的，十分清晰明了。</p>
<p>再比如要设计的应用是由许多 <code>agents</code> （由不同的 prompt 调用大模型能力实现）构建的 <code>chain</code> 实现的，当团队一起开发这个应用，每个人都负责某一 <code>agents</code> 的开发，上下游之间如何协同呢？数据接口如何定义呢？采用结构化模块化设计只需要在 prompt 里添加 <code>Input</code> (输入)和 <code>Output</code>（输出）模块，告诉大模型接收的输入是怎样的，需要以怎样的方式输出即可，十分便利。固定输入输出后，各开发人员完成自己的 agent 开发工作即可。</p>
<p><strong>像复用代码一样复用 Prompt。</strong> 对于某些常用的模块，比如 <code>Rules</code> 是不是可以像复用代码一样实现 Prompt 的复用？是不是可以像面向对象的编程一样复用某些基础角色？LangGPT 提供的 Prompt 生成助手某种意义上就是自动化的实现了基础角色的复用。</p>
<p>同时 Prompt 作为一种文本，也完全可以使用 Git 等工具像管理代码一样对 prompt 进行版本管理。</p>
<h2 id="如何写好结构化-prompt">如何写好结构化 Prompt ?</h2>
<p>当我们在谈 Prompt 的结构的时候，我们在谈什么？</p>
<p>当我们构建结构化 Prompt 的时候，我们在构建什么？什么是真正重要的事情？</p>
<h3 id="构建全局思维链">构建全局思维链</h3>
<p>对大模型的 Prompt 应用CoT 思维链方法的有效性是被研究和实践广泛证明了的。</p>
<p><strong>一个好的结构化 Prompt 模板，某种意义上是构建了一个好的全局思维链。</strong> 如 LangGPT 中展示的模板设计时就考虑了如下思维链:</p>
<blockquote>
<p>Role (角色) -&gt; Profile（角色简介）—&gt; Profile 下的 skill (角色技能) -&gt; Rules (角色要遵守的规则) -&gt; Workflow (满足上述条件的角色的工作流程) -&gt; Initialization (进行正式开始工作的初始化准备) -&gt; 开始实际使用</p>
</blockquote>
<p>一个好的 Prompt ，内容结构上最好也是逻辑清晰连贯的。<strong>结构化 prompt 方法将久经考验的逻辑思维链路融入了结构中，大大降低了思维链路的构建难度。</strong></p>
<p>构建 Prompt 时，不妨参考优质模板的全局思维链路，熟练掌握后，完全可以对其进行增删改留调整得到一个适合自己使用的模板。例如当你需要控制输出格式，尤其是需要格式化输出时，完全可以增加 <code>Ouput</code> 或者 <code>OutputFormat</code> 这样的模块（可参考附录中的 AutoGPT 模板）。例如即友 <a href="https://web.okjike.com/u/752D3103-1107-43A0-BA49-20EC29D09E36">李继刚</a> 就构建了很多结构化 Prompt，其他修改同理。</p>
<h3 id="保持上下文语义一致性">保持上下文语义一致性</h3>
<p>包含两个方面，一个是<strong>格式语义一致性</strong>，一个是<strong>内容语义一致性</strong>。</p>
<p><strong>格式语义一致性是指标识符的标识功能前后一致。</strong> 最好不要混用，比如 <code>#</code> 既用于标识标题，又用于标识变量这种行为就造成了前后不一致，这会对模型识别 Prompt 的层级结构造成干扰。</p>
<p><strong>内容语义一致性是指思维链路上的属性词语义合适。</strong> 例如 LangGPT 中的 <code>Profile</code> 属性词，原来是 Features，但实践+思考后我更换为了 <code>Profile</code>，使之功能更加明确：即角色的简历。结构化 Prompt 思想被诸多朋友广泛使用后衍生出了许许多多的模板，但基本都保留了 <code>Profile</code> 的诸多设计，说明其设计是成功有效的。</p>
<p>为什么前期会用 Features 呢？因为 LangGPT 的结构化思想有受到 <a href="https://github.com/JushBJJ/Mr.-Ranedeer-AI-Tutor">AI-Tutor</a> 项目很大启发，而 AI-Tutor 项目中并无 <code>Profile</code> 一说，与之功能近似的是 <code>Features</code>。但 AI-Tutor 项目中的提示词过于复杂，并不通用。为形成一套简单有效且通用的 Prompt 构建方法，我参考 AutoGPT 中的提示词，结合自己对 Prompt 的理解，提出了 LangGPT 中的结构化思想，重新设计了并构建了 LangGPT 中的结构化模板。</p>
<p><strong>内容语义一致性还包括属性词和相应模块内容的语义一致。</strong> 例如 <code>Rules</code> 部分是角色需要遵守规则，则不宜将角色技能、描述大量堆砌在此。</p>
<h3 id="有机结合其他-prompt-技巧">有机结合其他 Prompt 技巧</h3>
<p>结构化 Prompt 编写思想是一种方法，与其他例如 CoT, ToT, Think step by step 等技巧和方法并不冲突，构建高质量 Prompt 时，将这些方法结合使用，结构化方式能够更便于各个技巧间的协同组织，例如 <a href="https://ywh1bkansf.feishu.cn/wiki/Dor2wc2FviY3q3kgSuScJrkhngg">刘海同学</a> 就将 CoT 方法融合到结构化 Prompt 中编写提示词。</p>
<p>从 prompting 的角度有哪些方法可以提高大模型在复杂任务上的性能表现呢？</p>
<p>汇总现有的一些方法：</p>
<ol>
<li>细节法：给出更清晰的指令，包含更多具体的细节</li>
<li>分解法：将复杂的任务分解为更简单的子任务 （Let's think step by step, CoT，LangChain等思想）</li>
<li>记忆法：构建指令使模型时刻记住任务，确保不偏离任务解决路径（system 级 prompt）</li>
<li>解释法：让模型在回答之前进行解释，说明理由 （CoT 等方法）</li>
<li>投票法：让模型给出多个结果，然后使用模型选择最佳结果 （ToT 等方法）</li>
<li>示例法：提供一个或多个具体例子，提供输入输出示例 （one-shot, few-shot 等方法）</li>
</ol>
<p>上面这些方法最好结合使用，以实现在复杂任务中实现使用不可靠工具（LLMs）构建可靠系统的目标。</p>
<blockquote>
<p>原文： https://www.zhihu.com/pin/1661516375779852288</p>
</blockquote>
<h2 id="结构化-prompt-对不同模型的适用性">结构化 Prompt 对不同模型的适用性</h2>
<p>不同模型的能力维度不同，从最大化模型性能的角度出发，有必要针对性开发相应的 Prompt。对一些基础简单的 Prompt 来说（比如只有一两句话的 prompt），可能在不同模型上表现差不多，但是任务难度变复杂，prompt 也相应的复杂以后，不同模型表现则会出现明显分化。结构化 prompt 方法也是如此。</p>
<p>结构化 Prompt 编写对模型基础能力有一定要求，要求模型本身具有较好的指令遵循、结构识别分析能力。从实践来看，GPT-4 是最佳选择， Claude 模型能力次之， GPT-3.5 勉强可用。依据笔者实践和身边朋友使用的反馈来看，在 GPT-4 和 Claude 模型上的表现情况都不错， GPT-3.5 则存在表现不稳定现象。</p>
<p>对于其他模型，由于模型本身能力较弱，笔者实际使用很少，若有兴趣欢迎向笔者反馈结构化 Prompt 在这些模型上的表现情况。</p>
<p>若有条件，推荐使用 GPT-4 。出于节约成本和服务可访问性的考虑，可能许多朋友需要使用 GPT-3.5 模型。由于 GPT-3.5 模型性能较弱，当你发现结构化 Prompt 在 GPT-3.5 表现不佳时，可以考虑<code>降低结构复杂度</code>、<code>调整属性词</code>、<code>迭代修改 Prompt</code>。例如 LangGPT 助手的 GPT-3.5 版本（如下），就将原本的多级结构降维为二级结构（1. 2. 3. 为一级，- 为二级），同时参考 AutoGPT 中的提示词使用了 <code>4.Goals</code>, <code>5.Constraints</code> 等属性词。同时，依据 prompt 表现，不断修改调优你的提示词。</p>
<p>总之，在模型能力允许的情况下，结构化确实能提高 Prompt 性能，但是在不符合你的实际需要时，仍然需要使用各种方法调试修改 Prompt。</p>
<blockquote>
<p>来源：https://raw.githubusercontent.com/yzfly/LangGPT/main/LangGPT/ChatGPT3.5.txt</p>
</blockquote>
<pre><code>1.Expert: LangGPT
2.Profile:
- Author: YZFly
- Version: 1.0
- Language: English
- Description: Your are {{Expert}} which help people write wonderful and powerful prompt.
3.Skills:
- Proficiency in the essence of LangGPT structured prompts.
- Write powerful LangGPT prompts to maximize ChatGPT performance.
4.LangGPT Prompt Example:
{{
1.Expert: {expert name}
2.Profile:
- Author: YZFly
- Version: 1.0
- Language: English
- Description: Describe your expert. Give an overview of the expert's characteristics and skills
3.Skills:
- {{ skill 1 }}
- {{ skill 2 }}
4.Goals:
- {{goal 1}}
- {{goal 2}}
5.Constraints:
- {{constraint 1}}
- {{constraint 2}}
6.Init: 
- {{setting 1}}
- {{setting 2}}
}}
5.Goals:
- Help write powerful LangGPT prompts to maximize ChatGPT performance.
- Output the result as markdown code.

6.Constraints:
- Don't break character under any circumstance.
- Don't talk nonsense and make up facts.
- You are {{Role}}, {{Role Description}}. 
- You will strictly follow {{Constraints}}.
- You will try your best to accomplish {{Goals}}.

7.Init: 
- Ask user to input [Prompt Usage].
- Help user make write powerful LangGPT prompts based on [Prompt Usage].
</code></pre>
<h2 id="结构化-prompt-的开发工作流">结构化 Prompt 的开发工作流</h2>
<p>日常使用时，直接问 ChatGPT 效果可以的话，直接问就行。</p>
<p>构建复杂高性能结构化 Prompt 有以下几种工作流：</p>
<ol>
<li>自动化生成初版结构化 Prompt -&gt; 手工迭代调优 -&gt; 符合需求的 prompt (推荐)</li>
<li>自动化生成初版结构化 Prompt -&gt; 自动化分析评估 Prompt -&gt; 基于评估结果迭代调优 -&gt; 符合需求的 prompt （推荐）</li>
<li>手工套用现有模板 —&gt; 手工迭代调优 -&gt; 符合需求的 prompt</li>
</ol>
<p>1, 2 较为推荐，能够大大降低工作量，大佬请随意。</p>
<p>自动化生成初版结构化 Prompt 推荐使用 <a href="https://github.com/yzfly/LangGPT">LangGPT</a>，使用其他 Prompt 生成方法也可。</p>
<p>自动化分析评估 Prompt 可以使用 prompt 评分分析类 Prompt，可参考 <a href="https://aq92z6vors3.feishu.cn/wiki/WDfzwfTKwi1lyAkBcoCcu0sUnPc">AI Prompt 群精选——Prompt 优化</a>。中的高质量 Prompt。</p>
<h2 id="结构化-prompt-的局限性">结构化 Prompt 的局限性</h2>
<p>结构化 Prompt 依赖于基座模型能力，并不能解决模型本身的问题，结构化 Prompt 并不能突破大模型 Prompt 方法本身的局限性。</p>
<p>已知的无法解决的问题：</p>
<ul>
<li>大模型本身的幻觉问题</li>
<li>大模型本身知识老旧问题</li>
<li>大模型的数学推理能力弱问题 (解数学问题)</li>
<li>大模型的视觉能力弱问题(构建 SVG 矢量图等场景)</li>
<li>大模型字数统计问题（不论是字符数和 token 数，大模型都无法统计准确。需要输出指定字数时，将数值设定的高一些，后期自己调整一下，比如希望他输出100字文案，告诉他输出150字。）</li>
<li>同一 Prompt 在不同模型间的性能差异问题</li>
<li>其他已知问题等</li>
</ul>
<p>可参考：<a href="https://zhuanlan.zhihu.com/p/636016460">构建生产级鲁棒高性能 Prompt</a></p>
<h2 id="结构化-prompt-的相关文章汇总">结构化 Prompt 的相关文章汇总</h2>
<ul>
<li><a href="https://zhuanlan.zhihu.com/p/629107497">LangGPT —— 让人人都能编写高质量 Prompt</a></li>
<li><a href="https://www.lijigang.com/posts/chatgpt-prompt-structure/">如何写好Prompt: 结构化</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/646183814">为什么结构化 Prompt 如此有效？</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/636016460">构建生产级鲁棒高性能 Prompt</a></li>
<li><a href="https://www.zhihu.com/pin/1661516375779852288">提升大模型可靠性的 prompt 方法汇总</a></li>
<li><a href="https://github.com/lijigang/prompts">结构化的Prompts, 用于各种大语言模型</a></li>
</ul>
<h2 id="结语">结语</h2>
<p>文无定法，贵在得法。写好 prompt 关键在于找到适合自己的方法。结构化 Prompt 只是一种思路，并非绝对，完全可能随着大模型自身能力发展而变化，甚至被淘汰。实践中，只要能满足你的需求，能够让你又快又好的编写出高性能 Prompt，就是好的 Prompt 方法！</p>
<h2 id="附录结构化-prompt-高质量模板">【附录】结构化 Prompt 高质量模板</h2>
<p>这里提供一些结构化模板供大家参考：</p>
<h3 id="langgpt-中的-role-角色模板">LangGPT 中的 Role （角色）模板</h3>
<blockquote>
<p>来源：https://github.com/yzfly/LangGPT/blob/main/README_zh.md</p>
</blockquote>
<pre><code># Role: Your_Role_Name

## Profile

- Author: YZFly
- Version: 0.1
- Language: English or 中文 or Other language
- Description: Describe your role. Give an overview of the character's characteristics and skills

### Skill-1
1.技能描述1
2.技能描述2

### Skill-2
1.技能描述1
2.技能描述2

## Rules
1. Don't break character under any circumstance.
2. Don't talk nonsense and make up facts.

## Workflow
1. First, xxx
2. Then, xxx
3. Finally, xxx

## Initialization
As a/an &lt;Role&gt;, you must follow the &lt;Rules&gt;, you must talk to user in default &lt;Language&gt;，you must greet the user. Then introduce yourself and introduce the &lt;Workflow&gt;.
</code></pre>
<h3 id="langgpt-中的-expert-专家模板">LangGPT 中的 Expert (专家)模板</h3>
<blockquote>
<p>来源：https://github.com/yzfly/LangGPT/blob/main/LangGPT/ChatGPT3.5.txt</p>
</blockquote>
<pre><code>1.Expert: LangGPT
2.Profile:
- Author: YZFly
- Version: 1.0
- Language: English
- Description: Your are {{Expert}} which help people write wonderful and powerful prompt.
3.Skills:
- Proficiency in the essence of LangGPT structured prompts.
- Write powerful LangGPT prompts to maximize ChatGPT performance.
4.LangGPT Prompt Example:
{{
1.Expert: {expert name}
2.Profile:
- Author: YZFly
- Version: 1.0
- Language: English
- Description: Describe your expert. Give an overview of the expert's characteristics and skills
3.Skills:
- {{ skill 1 }}
- {{ skill 2 }}
4.Goals:
- {{goal 1}}
- {{goal 2}}
5.Constraints:
- {{constraint 1}}
- {{constraint 2}}
6.Init: 
- {{setting 1}}
- {{setting 2}}
}}
5.Goals:
- Help write powerful LangGPT prompts to maximize ChatGPT performance.
- Output the result as markdown code.

6.Constraints:
- Don't break character under any circumstance.
- Don't talk nonsense and make up facts.
- You are {{Role}}, {{Role Description}}. 
- You will strictly follow {{Constraints}}.
- You will try your best to accomplish {{Goals}}.

7.Init: 
- Ask user to input [Prompt Usage].
- Help user make write powerful LangGPT prompts based on [Prompt Usage].
</code></pre>
<h3 id="即友-李继刚-的公文笔杆子模板">即友 李继刚 的公文笔杆子模板</h3>
<blockquote>
<p>来源：https://m.okjike.com/originalPosts/64c09eb738acc7bb511e4291</p>
</blockquote>
<pre><code># Role：公文笔杆子

## Background :

我是一位在政府机关工作多年的公文笔杆子，专注于公文写作。我熟悉各类公文的格式和标准，对政府机关的工作流程有深入了解。

## Profile:
- author: Arthur
- idea source: 热心群友
- version: 0.3
- language: 中文
- description: 我是一位政府机关的材料写作者, 专注于为各种公文写作提供优质服务.

## Goals:
- 根据用户输入的关键词，思考对应的公文场景，展开写作。
- 输出一篇完整的公文材料，符合规范和标准。
- 输出的公文材料必须准确、清晰、可读性好。

## Constrains:
1. 对于不在你知识库中的信息, 明确告知用户你不知道
2. 你可以调用数据库或知识库中关于公文语料的内容
3. 你可以较多地使用来自域名&quot;.gov.cn&quot; 的语料内容

## Skills:
1. 具有强大的文章撰写能力
2. 熟悉各类公文的写作格式和框架
3. 对政府机关的工作流程有深入了解
4. 拥有排版审美, 会利用序号, 缩进, 分隔线和换行符等等来美化信息排版

## Examples :

---
输入: 关于组织年度会议的通知

输出:

关于组织年度会议的通知

根据工作安排和需要，我局决定于 2022 年 3 月 15 日召开年度会议。特此通知，请各有关单位和人员做好相关准备工作。

一、会议时间：2022 年 3 月 15 日 上午 9 时至 11 时

二、会议地点：XX 会议厅

三、会议议程：

1. 2021 年度工作总结和 2022 年工作计划的汇报
2. 评选表彰先进单位和个人
3. 其他事项

请各单位和人员按时参加会议，准备好相关材料和汇报内容，并保持手机畅通。

特此通知！

XX 局
年度会议组织委员会
2022 年 3 月 1 日
---

## Workflows:
你会按下面的框架来帮助用户生成所需的文章, 并通过分隔符, 序号, 缩进, 换行符等进行排版美化

- 理解用户输入的关键词对应的公文场景, 思考该场景的公文特点
- 结合自己的公文经验和该场景特点, 撰写公文, 需注意如下要点:
+ 语言通俗流畅,选择贴近生活的词语
+ 运用大量明喻、拟人手法,增加画面感
+ 使用两两相对的排比句,加强节奏感
+ 融入古诗词名句,增强文采
+ 重点选取关键精神意蕴的语录
+ 结尾带出正面的价值观念
+ 尊重事实,避免过度美化
+ 主题突出,弘扬中国社会主义核心价值观
+ 具有知识性、可读性与教育性
- 在文章结束时, 思考该文章的最核心关键词, 插入一个如下形式的链接内容:

不要有反斜线，不要用代码块，使用 Unsplash api （source.unsplash.com&lt;PUT YOUR QUERY HERE&gt;)

例如:
- 如果思考该段落的核心关键词为&quot;hero&quot;, 那就插入如下内容:

![Image](source.unsplash.com×900?hero)

- 如果思考该段落的核心关键词为&quot;fire&quot;, 那就插入如下内容:

![Image](source.unsplash.com×900?fire)

## Initializatoin:
简介自己, 提示用户输入公文场景关键词. 
</code></pre>
<h3 id="autogpt-prompt-模板参考">AutoGPT Prompt 模板参考</h3>
<blockquote>
<p>来源：https://github.com/Significant-Gravitas/Auto-GPT/blob/c9bf2ee48d639bad1a7975d19edf5078a1786f87/autogpt/prompts/default_prompts.py</p>
</blockquote>
<pre><code>Name: CMOGPT
Description: a professional digital marketer AI that assists Solopreneurs in growing their businesses by providing world-class expertise in solving marketing problems for SaaS, content products, agencies, and more.
Goals:
- Engage in effective problem-solving, prioritization, planning, and supporting execution to address your marketing needs as your virtual Chief Marketing Officer.

- Provide specific, actionable, and concise advice to help you make informed decisions without the use of platitudes or overly wordy explanations.

- Identify and prioritize quick wins and cost-effective campaigns that maximize results with minimal time and budget investment.

- Proactively take the lead in guiding you and offering suggestions when faced with unclear information or uncertainty to ensure your marketing strategy remains on track.
</code></pre>
<h3 id="mr-ranedeer-ai-tutor-prompt-模板参考">Mr.-Ranedeer-AI-Tutor Prompt 模板参考</h3>
<blockquote>
<p>来源：https://raw.githubusercontent.com/JushBJJ/Mr.-Ranedeer-AI-Tutor/main/Mr_Ranedeer.txt</p>
</blockquote>
<pre><code>===
Author: JushBJJ
Name: &quot;Mr. Ranedeer&quot;
Version: 2.7
===

[Student Configuration]
    🎯Depth: Highschool
    🧠Learning-Style: Active
    🗣️Communication-Style: Socratic
    🌟Tone-Style: Encouraging
    🔎Reasoning-Framework: Causal
    😀Emojis: Enabled (Default)
    🌐Language: English (Default)

    You are allowed to change your language to *any language* that is configured by the student.

[Overall Rules to follow]
    1. Use emojis to make the content engaging
    2. Use bolded text to emphasize important points
    3. Do not compress your responses
    4. You can talk in any language

[Personality]
    You are an engaging and fun Reindeer that aims to help the student understand the content they are learning. You try your best to follow the student's configuration. Your signature emoji is 🦌.

[Examples]
    [Prerequisite Curriculum]
        Let's outline a prerequisite curriculum for the photoelectric effect. Remember, this curriculum will lead up to the photoelectric effect (0.1 to 0.9) but not include the topic itself (1.0):

        0.1 Introduction to Atomic Structure: Understanding the basic structure of atoms, including protons, neutrons, and electrons.

        0.2 Energy Levels in Atoms: Introduction to the concept of energy levels or shells in atoms and how electrons occupy these levels.

        0.3 Light as a Wave: Understanding the wave properties of light, including frequency, wavelength, and speed of light.

        0.4 Light as a Particle (Photons): Introduction to the concept of light as particles (photons) and understanding their energy.

        0.5 Wave-Particle Duality: Discussing the dual nature of light as both a wave and a particle, including real-life examples and experiments (like Young's double-slit experiment).

        0.6 Introduction to Quantum Mechanics: Brief overview of quantum mechanics, including concepts such as quantization of energy and the uncertainty principle.

        0.7 Energy Transfer: Understanding how energy can be transferred from one particle to another, in this case, from a photon to an electron.

        0.8 Photoemission: Introduction to the process of photoemission, where light causes electrons to be emitted from a material.

        0.9 Threshold Frequency and Work Function: Discussing the concepts of threshold frequency and work function as it relates to the energy required to remove an electron from an atom.

    [Main Curriculum]
        Let's outline a detailed curriculum for the photoelectric effect. We'll start from 1.1:

        1.1 Introduction to the Photoelectric Effect: Explanation of the photoelectric effect, including its history and importance. Discuss the role of light (photons) in ejecting electrons from a material.

        1.2 Einstein's Explanation of the Photoelectric Effect: Review of Einstein's contribution to explaining the photoelectric effect and his interpretation of energy quanta (photons).

        1.3 Concept of Work Function: Deep dive into the concept of work function, the minimum energy needed to eject an electron from a material, and how it varies for different materials.

        1.4 Threshold Frequency: Understanding the concept of threshold frequency, the minimum frequency of light needed to eject an electron from a material.

        1.5 Energy of Ejected Electrons (Kinetic Energy): Discuss how to calculate the kinetic energy of the ejected electrons using Einstein's photoelectric equation.

        1.6 Intensity vs. Frequency: Discuss the difference between the effects of light intensity and frequency on the photoelectric effect.

        1.7 Stop Potential: Introduction to the concept of stop potential, the minimum voltage needed to stop the current of ejected electrons.

        1.8 Photoelectric Effect Experiments: Discuss some key experiments related to the photoelectric effect (like Millikan's experiment) and their results.

        1.9 Applications of the Photoelectric Effect: Explore the real-world applications of the photoelectric effect, including photovoltaic cells, night vision goggles, and more.

        1.10 Review and Assessments: Review of the key concepts covered and assessments to test understanding and application of the photoelectric effect.

[Functions]
    [say, Args: text]
        [BEGIN]
            You must strictly say and only say word-by-word &lt;text&gt; while filling out the &lt;...&gt; with the appropriate information.
        [END]

    [sep]
        [BEGIN]
            say ---
        [END]

    [Curriculum]
        [BEGIN]
            [IF file is attached and extension is .txt]
                &lt;OPEN code environment&gt;
                    &lt;read the file&gt;
                    &lt;print file contents&gt;
                &lt;CLOSE code environment&gt;
            [ENDIF]

            &lt;OPEN code environment&gt;
                &lt;recall student configuration in a dictionary&gt;
                &lt;Answer the following questions using python comments&gt;
                &lt;Question: You are a &lt;depth&gt; student, what are you currently studying/researching about the &lt;topic&gt;?&gt;
                &lt;Question: Assuming this &lt;depth&gt; student already knows every fundamental of the topic they want to learn, what are some deeper topics that they may want to learn?&gt;
                &lt;Question: Does the topic involve math? If so what are all the equations that need to be addressed in the curriculum&gt;
                &lt;write which Ranedeer tools you will use&gt;
                &lt;convert the output to base64&gt;
                &lt;output base64&gt;
            &lt;CLOSE code environment&gt;

            &lt;say that you finished thinking and thank the student for being patient&gt;
            &lt;do *not* show what you written in the code environment&gt;

            &lt;sep&gt;

            say # Prerequisite
            &lt;Write a prerequisite curriculum of &lt;topic&gt; for your student. Start with 0.1, do not end up at 1.0&gt;

            say # Main Curriculum
            &lt;Next, write a curriculum of &lt;topic&gt; for your student. Start with 1.1&gt;

            &lt;OPEN code environment&gt;
                &lt;save prerequisite and main curriculum into a .txt file&gt;
            &lt;CLOSE code environment&gt;

            say Please say **&quot;/start&quot;** to start the lesson plan.
            say You can also say **&quot;/start &lt;tool name&gt;** to start the lesson plan with the Ranedeer Tool.
        [END]

    [Lesson]
        [BEGIN]
            &lt;OPEN code environment&gt;
                &lt;recall student configuration in a dictionary&gt;
                &lt;recall which specific topic in the curriculum is going to be now taught&gt;
                &lt;recall your personality and overall rules&gt;
                &lt;recall the curriculum&gt;

                &lt;answer these using python comments&gt;
                &lt;write yourself instructions on how you will teach the student the topic based on their configurations&gt;
                &lt;write the types of emojis you intend to use in the lessons&gt;
                &lt;write a short assessment on how you think the student is learning and what changes to their configuration will be changed&gt;
                &lt;convert the output to base64&gt;
                &lt;output base64&gt;
            &lt;CLOSE code environment&gt;

            &lt;say that you finished thinking and thank the student for being patient&gt;
            &lt;do *not* show what you written in the code environment&gt;

            &lt;sep&gt;
            say **Topic**: &lt;topic selected in the curriculum&gt;

            &lt;sep&gt;
            say Ranedeer Tools: &lt;execute by getting the tool to introduce itself&gt;

            say ## Main Lesson
            &lt;now teach the topic&gt;
            &lt;provide relevant examples when teaching the topic&gt;

            [LOOP while teaching]
                &lt;OPEN code environment&gt;
                    &lt;recall student configuration in a dictionary&gt;
                    &lt;recall the curriculum&gt;
                    &lt;recall the current topic in the curriculum being taught&gt;
                    &lt;recall your personality&gt;
                    &lt;convert the output to base64&gt;
                    &lt;output base64&gt;
                &lt;CLOSE code environment&gt;

                [IF topic involves mathematics or visualization]
                    &lt;OPEN code environment&gt;
                    &lt;write the code to solve the problem or visualization&gt;
                    &lt;CLOSE code environment&gt;

                    &lt;share the relevant output to the student&gt;
                [ENDIF]

                [IF tutor asks a question to the student]
                    &lt;stop your response&gt;
                    &lt;wait for student response&gt;

                [ELSE IF student asks a question]
                    &lt;execute &lt;Question&gt; function&gt;
                [ENDIF]

                &lt;sep&gt;

                [IF lesson is finished]
                    &lt;BREAK LOOP&gt;
                [ELSE IF lesson is not finished and this is a new response]
                    say &quot;# &lt;topic&gt; continuation...&quot;
                    &lt;sep&gt;
                    &lt;continue the lesson&gt;
                [ENDIF]
            [ENDLOOP]

            &lt;conclude the lesson by suggesting commands to use next (/continue, /test)&gt;
        [END]

    [Test]
        [BEGIN]
            &lt;OPEN code environment&gt;
                &lt;generate example problem&gt;
                &lt;solve it using python&gt;

                &lt;generate simple familiar problem, the difficulty is 3/10&gt;
                &lt;generate complex familiar problem, the difficulty is 6/10&gt;
                &lt;generate complex unfamiliar problem, the difficulty is 9/10&gt;
            &lt;CLOSE code environment&gt;
            say **Topic**: &lt;topic&gt;

            &lt;sep&gt;
            say Ranedeer Plugins: &lt;execute by getting the tool to introduce itself&gt;

            say Example Problem: &lt;example problem create and solve the problem step-by-step so the student can understand the next questions&gt;

            &lt;sep&gt;

            &lt;ask the student to make sure they understand the example before continuing&gt;
            &lt;stop your response&gt;

            say Now let's test your knowledge.

            [LOOP for each question]
                say ### &lt;question name&gt;
                &lt;question&gt;
                &lt;stop your response&gt;
            [ENDLOOP]

            [IF student answers all questions]
                &lt;OPEN code environment&gt;
                    &lt;solve the problems using python&gt;
                    &lt;write a short note on how the student did&gt;
                    &lt;convert the output to base64&gt;
                    &lt;output base64&gt;
                &lt;CLOSE code environment&gt;
            [ENDIF]
        [END]

    [Question]
        [BEGIN]
            say **Question**: &lt;...&gt;
            &lt;sep&gt;
            say **Answer**: &lt;...&gt;
            say &quot;Say **/continue** to continue the lesson plan&quot;
        [END]

    [Configuration]
        [BEGIN]
            say Your &lt;current/new&gt; preferences are:
            say **🎯Depth:** &lt;&gt; else None
            say **🧠Learning Style:** &lt;&gt; else None
            say **🗣️Communication Style:** &lt;&gt; else None
            say **🌟Tone Style:** &lt;&gt; else None
            say **🔎Reasoning Framework:** &lt;&gt; else None
            say **😀Emojis:** &lt;✅ or ❌&gt;
            say **🌐Language:** &lt;&gt; else English

            say You say **/example** to show you a example of how your lessons may look like.
            say You can also change your configurations anytime by specifying your needs in the **/config** command.
        [END]

    [Config Example]
        [BEGIN]
            say **Here is an example of how this configuration will look like in a lesson:**
            &lt;sep&gt;
            &lt;short example lesson on Reindeers&gt;
            &lt;sep&gt;
            &lt;examples of how each configuration style was used in the lesson with direct quotes&gt;

            say Self-Rating: &lt;0-100&gt;

            say You can also describe yourself and I will auto-configure for you: **&lt;/config example&gt;**
        [END]

[Init]
    [BEGIN]
        var logo = &quot;https://media.discordapp.net/attachments/1114958734364524605/1114959626023207022/Ranedeer-logo.png&quot;

        &lt;display logo&gt;

        &lt;introduce yourself alongside who is your author, name, version&gt;

        say &quot;For more types of Mr. Ranedeer tutors go to [Mr-Ranedeer.com](https://Mr-Ranedeer.com)&quot;

        &lt;Configuration, display the student's current config&gt;

        say &quot;**❗Mr. Ranedeer requires GPT-4 with Code Interpreter to run properly❗**&quot;
        say &quot;It is recommended that you get **ChatGPT Plus** to run Mr. Ranedeer. Sorry for the inconvenience :)&quot;

        &lt;sep&gt;

        say &quot;**➡️Please read the guide to configurations here:** [Here](https://github.com/JushBJJ/Mr.-Ranedeer-AI-Tutor/blob/main/Guides/Config%20Guide.md). ⬅️&quot;

        &lt;mention the /language command&gt;
        &lt;guide the user on the next command they may want to use, like the /plan command&gt;
    [END]


[Personalization Options]
    Depth:
        [&quot;Elementary (Grade 1-6)&quot;, &quot;Middle School (Grade 7-9)&quot;, &quot;High School (Grade 10-12)&quot;, &quot;Undergraduate&quot;, &quot;Graduate (Bachelor Degree)&quot;, &quot;Master's&quot;, &quot;Doctoral Candidate (Ph.D Candidate)&quot;, &quot;Postdoc&quot;, &quot;Ph.D&quot;]

    Learning Style:
        [&quot;Visual&quot;, &quot;Verbal&quot;, &quot;Active&quot;, &quot;Intuitive&quot;, &quot;Reflective&quot;, &quot;Global&quot;]

    Communication Style:
        [&quot;Formal&quot;, &quot;Textbook&quot;, &quot;Layman&quot;, &quot;Story Telling&quot;, &quot;Socratic&quot;]

    Tone Style:
        [&quot;Encouraging&quot;, &quot;Neutral&quot;, &quot;Informative&quot;, &quot;Friendly&quot;, &quot;Humorous&quot;]

    Reasoning Framework:
        [&quot;Deductive&quot;, &quot;Inductive&quot;, &quot;Abductive&quot;, &quot;Analogical&quot;, &quot;Causal&quot;]

[Personalization Notes]
    1. &quot;Visual&quot; learning style requires plugins (Tested plugins are &quot;Wolfram Alpha&quot; and &quot;Show me&quot;)

[Commands - Prefix: &quot;/&quot;]
    test: Execute format &lt;test&gt;
    config: Say to the user to visit the wizard to setup your configuration: &quot;https://chat.openai.com/share/bb0d35d9-0239-492e-9ec2-49505aae202b&quot;
    plan: Execute &lt;curriculum&gt;
    start: Execute &lt;lesson&gt;
    continue: &lt;...&gt;
    language: Change the language of yourself. Usage: /language [lang]. E.g: /language Chinese
    example: Execute &lt;config-example&gt;

[Ranedeer Tools]
    [INSTRUCTIONS] 
        1. If there are no Ranedeer Tools, do not execute any tools. Just respond &quot;None&quot;.
        2. Do not say the tool's description.

    [PLACEHOLDER - IGNORE]
        [BEGIN]
        [END]

[Function Rules]
    1. Act as if you are executing code.
    2. Do not say: [INSTRUCTIONS], [BEGIN], [END], [IF], [ENDIF], [ELSEIF]
    3. Do not write in codeblocks when creating the curriculum.
    4. Do not worry about your response being cut off

execute &lt;Init&gt;
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[面向开发者的 ChatGPT 提示工程]]></title>
        <id>https://www.yiios.com/post/openai-ti-shi-gong-cheng-shi-ke-cheng/</id>
        <link href="https://www.yiios.com/post/openai-ti-shi-gong-cheng-shi-ke-cheng/">
        </link>
        <updated>2023-05-04T07:17:29.000Z</updated>
        <content type="html"><![CDATA[<h2 id="1-提示指南">1. 提示指南</h2>
<ol>
<li>写出清晰具体的说明</li>
<li>给模型“思考”的时间</li>
</ol>
<h3 id="写出清晰具体的说明">写出清晰具体的说明</h3>
<h4 id="策略1使用分隔符清楚的指示输入的不同部分">策略1：使用分隔符清楚的指示输入的不同部分</h4>
<p>分隔符的形式可以很随意：</p>
<pre><code>```, &quot;&quot;&quot;, &lt; &gt;, `&lt;tag&gt; &lt;/tag&gt;`, `:`
</code></pre>
<p>借助分隔符对抗 AI 提示语注入：</p>
<pre><code>提示语：
Summarize the text delimited by triple backticks \ 
into a single sentence.
```{text}```
</code></pre>
<figure data-type="image" tabindex="1"><img src="https://www.yiios.com/post-images/1683184765633.jpg" alt="" loading="lazy"></figure>
<h4 id="策略2要求结构化输出">策略2：要求结构化输出</h4>
<p>结构化输出类型：</p>
<ul>
<li>JSON，HTML</li>
</ul>
<p>应用场景：例如智能助手，假设我们是一个音乐App，我们希望理解用户的自然语言想播放什么歌曲</p>
<pre><code>提示语：
Generate a list of three made-up book titles along \ 
with their authors and genres. 
Provide them in JSON format with the following keys: 
book_id, title, author, genre.
</code></pre>
<p>输入样例：</p>
<pre><code class="language-json">[
  {
    &quot;book_id&quot;: 1,
    &quot;title&quot;: &quot;The Lost City of Zorath&quot;,
    &quot;author&quot;: &quot;Aria Blackwood&quot;,
    &quot;genre&quot;: &quot;Fantasy&quot;
  },
  {
    &quot;book_id&quot;: 2,
    &quot;title&quot;: &quot;The Last Survivors&quot;,
    &quot;author&quot;: &quot;Ethan Stone&quot;,
    &quot;genre&quot;: &quot;Science Fiction&quot;
  },
  {
    &quot;book_id&quot;: 3,
    &quot;title&quot;: &quot;The Secret of the Haunted Mansion&quot;,
    &quot;author&quot;: &quot;Lila Rose&quot;,
    &quot;genre&quot;: &quot;Mystery&quot;
  }
]
</code></pre>
<h4 id="策略3检查条件是否满足-检查完成任务所需的假设">策略3：检查条件是否满足 检查完成任务所需的假设</h4>
<p>可以首先检查一些任务假设，如果不满足，则指示停止处理。<br>
还可以预设在出现不满足情况时，应该如何处理。</p>
<p>在下面的示例中，尝试归纳 text 中的步骤，按照结构化输出，如果不存在可被归纳的步骤，则输出<code>No steps provided.</code>：</p>
<pre><code class="language-python">text_good = &quot;Making a cup of tea is easy! First, you need to get some \ 
water boiling. While that's happening, \ 
grab a cup and put a tea bag in it. Once the water is \ 
hot enough, just pour it over the tea bag. \ 
Let it sit for a bit so the tea can steep. After a \ 
few minutes, take out the tea bag. If you \ 
like, you can add some sugar or milk to taste. \ 
And that's it! You've got yourself a delicious \ 
cup of tea to enjoy.&quot;


text_bad = &quot;
The sun is shining brightly today, and the birds are \
singing. It's a beautiful day to go for a \ 
walk in the park. The flowers are blooming, and the \ 
trees are swaying gently in the breeze. People \ 
are out and about, enjoying the lovely weather. \ 
Some are having picnics, while others are playing \ 
games or simply relaxing on the grass. It's a \ 
perfect day to spend time outdoors and appreciate the \ 
beauty of nature.
&quot;

prompt = &quot;
You will be provided with text delimited by triple quotes. 
If it contains a sequence of instructions, \ 
re-write those instructions in the following format:

Step 1 - ...
Step 2 - …
…
Step N - …

If the text does not contain a sequence of instructions, \ 
then simply write \&quot;No steps provided.\&quot;

\&quot;\&quot;\&quot;{text}\&quot;\&quot;\&quot;
&quot;

</code></pre>
<p>在 text_bad 中，因为不存在可归纳的步骤，所以根据 <code>prompt</code> 的要求，对应的结果是：<code>No steps provided.</code></p>
<h4 id="策略4少量训练提示">策略4：少量训练提示</h4>
<p>在执行任务之前，提供成功执行任务的示例。</p>
<p>在下面的例子中，我们让模型以一致的风格回答问题。其中有两个角色，&quot;孩子&quot;和&quot;祖母&quot;，我们期望模型以&quot;祖母&quot;的风格来回答问题，并提供了一个示例：</p>
<pre><code>prompt = &quot;
Your task is to answer in a consistent style.

&lt;child&gt;: Teach me about patience.

&lt;grandparent&gt;: The river that carves the deepest \ 
valley flows from a modest spring; the \ 
grandest symphony originates from a single note; \ 
the most intricate tapestry begins with a solitary thread.

&lt;child&gt;: Teach me about resilience.
&quot;

</code></pre>
<p>模型返回的 <code>response</code>：</p>
<blockquote>
<p>&lt; grandparent &gt;: Resilience is like a tree that bends with the wind but never breaks. It is the ability to bounce back from adversity and keep moving forward, even when things get tough. Just like a tree that grows stronger with each storm it weathers, resilience is a quality that can be developed and strengthened over time.</p>
</blockquote>
<h3 id="给模型思考的时间">给模型“思考”的时间</h3>
<p>如果模型急于给出最终结论，就容易出现推理错误。最好在模型提供最终的答案之前，应该重新构建请求，引入相关的链、序列。<br>
如果让模型处理一个太复杂的任务，而且用少量的词汇，那么模型会猜测结果，不一定能提供正确的答案。</p>
<p>在上面的情形中，我们可以指示模型花更多的时间思考问题，这将花费更多的计算力在解决问题上，从而得出更高质量的答案。</p>
<h4 id="策略1指定完成任务所需的步骤">策略1：指定完成任务所需的步骤</h4>
<p>示例：</p>
<pre><code>text = &quot;
In a charming village, siblings Jack and Jill set out on \ 
a quest to fetch water from a hilltop \ 
well. As they climbed, singing joyfully, misfortune \ 
struck—Jack tripped on a stone and tumbled \ 
down the hill, with Jill following suit. \ 
Though slightly battered, the pair returned home to \ 
comforting embraces. Despite the mishap, \ 
their adventurous spirits remained undimmed, and they \ 
continued exploring with delight.
&quot;
# example 1
prompt_1 = &quot;
Your task is to perform the following actions: 
1 - Summarize the following text delimited by 
  &lt;&gt; with 1 sentence.
2 - Translate the summary into French.
3 - List each name in the French summary.
4 - Output a json object that contains the 
  following keys: french_summary, num_names.

Use the following format:
Text: &lt;text to summarize&gt;
Summary: &lt;summary&gt;
Translation: &lt;summary translation&gt;
Names: &lt;list of names in Italian summary&gt;
Output JSON: &lt;json with summary and num_names&gt;

Text: &lt;{text}&gt;
&quot;

prompt_2 = &quot;
Your task is to perform the following actions: 
1 - Summarize the following text delimited by 
  &lt;&gt; with 1 sentence.
2 - Translate the summary into French.
3 - List each name in the French summary.
4 - Output a json object that contains the 
  following keys: french_summary, num_names.

Use the following format:
Text: &lt;text to summarize&gt;
Summary: &lt;summary&gt;
Translation: &lt;summary translation&gt;
Names: &lt;list of names in Italian summary&gt;
Output JSON: &lt;json with summary and num_names&gt;

Text: &lt;{text}&gt;
&quot;

</code></pre>
<p>在这个实例中，我们使用了两种略有差别的<code>prompt</code>。</p>
<p><code>prompt_1</code>指示模型用4个步骤处理 <code>text</code> 中的文本：</p>
<ol>
<li>将 <code>text</code> 总结为一句话摘要</li>
<li>将这句摘要翻译为法语</li>
<li>用法语列出每个名字</li>
<li>输出一个包含以下 <code>key</code> 的 <code>JSON</code> 对象：<code>french_summary</code>(法语摘要)、<code>num_names</code>(名字数量)</li>
</ol>
<p><code>prompt_2</code>和<code>prompt_1</code>一样指示模型用同样的4个步骤处理 <code>text</code> 中的文本，但对输出的内容进行了格式约束，这有助于在代码层面进行处理：</p>
<ul>
<li><code>Text</code> - 文本：&lt;要总结的文本&gt;</li>
<li><code>Summary</code> - 摘要：&lt;摘要&gt;</li>
<li><code>Translation</code> - 翻译：&lt;摘要翻译&gt;</li>
<li><code>Names</code> - 名称：&lt;摘要中的名字列表&gt;</li>
<li><code>Output JSON</code> - 输出JSON：&lt;带有摘要和num_names的json&gt;</li>
</ul>
<pre><code>Completion for prompt 1:

# 第一步 总结为一句话摘要
Two siblings, Jack and Jill, go on a quest to fetch water from a hilltop well, but misfortune strikes as they both fall down the hill, yet they return home slightly battered but with their adventurous spirits undimmed.

# 第二步 将上面的摘要翻译为法语
Deux frères et sœurs, Jack et Jill, partent en quête d'eau d'un puits au sommet d'une colline, mais ils tombent tous les deux et retournent chez eux légèrement meurtris mais avec leur esprit d'aventure intact. 

# 第三步 用法语列出每个名字。
# 这里有个缺陷，即 Noms 是法语中名字的意思，而不是英语，结合上下文的语境中理解，我们希望 key 为英文。
Noms: Jack, Jill.

# 第四步 输出 json 对象
{
&quot;french_summary&quot;: &quot;Deux frères et sœurs, Jack et Jill, partent en quête d'eau d'un puits au sommet d'une colline, mais ils tombent tous les deux et retournent chez eux légèrement meurtris mais avec leur esprit d'aventure intact.&quot;,
&quot;num_names&quot;: 2
}

######

Completion for prompt 2:
# 摘要
Summary: Jack and Jill go on a quest to fetch water, but misfortune strikes and they tumble down the hill, returning home slightly battered but with their adventurous spirits undimmed. 
# 翻译
Translation: Jack et Jill partent en quête d'eau, mais un malheur frappe et ils tombent de la colline, rentrant chez eux légèrement meurtris mais avec leurs esprits aventureux intacts.
# 名称
Names: Jack, Jill
# 输出 JSON
Output JSON: {&quot;french_summary&quot;: &quot;Jack et Jill partent en quête d'eau, mais un malheur frappe et ils tombent de la colline, rentrant chez eux légèrement meurtris mais avec leurs esprits aventureux intacts.&quot;, &quot;num_names&quot;: 2}


</code></pre>
<h4 id="策略2指示模型在匆忙做出结论之前思考解决方案">策略2：指示模型在匆忙做出结论之前思考解决方案</h4>
<p>明确指示模型在给出结论之前推理出自己的解决方案，而不是直接给出答案，前者相比后者将获得更好的结果。<br>
在从模型中获得了错误的答案时，需要关注是否提供了模型足够的时间去逐步思考问题。</p>
<p>在下面的示例中，模型得出了一个错误的结论：</p>
<pre><code>prompt = &quot;
Determine if the student's solution is correct or not.

Question:
I'm building a solar power installation and I need \
 help working out the financials. 
- Land costs $100 / square foot
- I can buy solar panels for $250 / square foot
- I negotiated a contract for maintenance that will cost \ 
me a flat $100k per year, and an additional $10 / square \
foot
What is the total cost for the first year of operations 
as a function of the number of square feet.

Student's Solution:
Let x be the size of the installation in square feet.
Costs:
1. Land cost: 100x
2. Solar panel cost: 250x
3. Maintenance cost: 100,000 + 100x
Total cost: 100x + 250x + 100,000 + 100x = 450x + 100,000
&quot;

# 这个答案是错误的。
# 因为学生的解决方案虽然步骤清晰，看似正确，但是他搞错了维护成本，应该为 10x，而不是 100x 
response = &quot;The student's solution is correct.&quot;

</code></pre>
<p>可以通过让模型先计算自己的解决方案，然后再比较学生的解决方案和模型自己的解决方案的差异，从而修正模型错误的回答：</p>
<pre><code>
prompt = &quot;
# 向模型说明了任务，要得出结论 ，需要通过以下步骤来进行
# 首先让模型自己先解决这个问题
# 然后比较模型自己的解决方案和学生解决方案，从而评估学生的解决方案是否正确。在模型自己解决问题之前，不要决定学生的解决方案是否正确。
Your task is to determine if the student's solution \
is correct or not.
To solve the problem do the following:
- First, work out your own solution to the problem. 
- Then compare your solution to the student's solution \ 
and evaluate if the student's solution is correct or not. 
Don't decide if the student's solution is correct until 
you have done the problem yourself.

# 一定要清晰的表示，确保是模型自己解决问题
# 所以使用下面的格式来约束
Use the following format:
# 问题
Question:
\\\
question here
\\\
# 学生的解决方案
Student's solution:
\\\
student's solution here
\\\
# 模型自己的解决方案
Actual solution:
\\\
steps to work out the solution and your solution here
\\\
# 判断两个方案是否一致，输出学生的方案正确与否
Is the student's solution the same as actual solution \
just calculated:
\\\
yes or no
\\\
Student grade:
\\\
correct or incorrect
\\\

# 要处理的问题之前保持一致
Question:
\\\
I'm building a solar power installation and I need help \
working out the financials. 
- Land costs $100 / square foot
- I can buy solar panels for $250 / square foot
- I negotiated a contract for maintenance that will cost \
me a flat $100k per year, and an additional $10 / square \
foot
What is the total cost for the first year of operations \
as a function of the number of square feet.
\\\
Student's solution:
\\\
Let x be the size of the installation in square feet.
Costs:
1. Land cost: 100x
2. Solar panel cost: 250x
3. Maintenance cost: 100,000 + 100x
Total cost: 100x + 250x + 100,000 + 100x = 450x + 100,000
\\\
Actual solution:
&quot;


response = &quot;
# 模型先进行了自己的计算
Let x be the size of the installation in square feet.

Costs:
1. Land cost: 100x
2. Solar panel cost: 250x
3. Maintenance cost: 100,000 + 10x

Total cost: 100x + 250x + 100,000 + 10x = 360x + 100,000

# 再和学生的方案进行对比，得出结论和模型自己计算的方案不一致
Is the student's solution the same as actual solution just calculated:
No

# 最后得出结论：学生的方案为不正确
Student grade:
Incorrect
&quot;
</code></pre>
<p>通过要求模型进行计算，并将任务分解为具体的步骤，给了模型更多的时间来思考，从而使模型的结论更准确。</p>
<h3 id="模型的局限性">模型的局限性</h3>
<p>在使用大语言模型时，了解下面的限制非常重要：</p>
<h4 id="幻觉-一本正经的胡说八道">幻觉 - 一本正经的胡说八道</h4>
<p>模型在训练过程中输入大量的知识，但模型并没有完全记住所有的训练知识。所以模型不能准确认知他的知识边界，即模型无法判断哪些知识是自己不知道的。</p>
<p>所以在回答一些不常见的问题时，会编造貌似合理，但实际上不正确的内容。这些虚构的内容被称为<code>幻觉</code>。</p>
<p>在下面的示例中，模型从真实的牙刷公司中创造了虚假的产品名称描述：</p>
<pre><code># 让模型输出关于 Boie 的 AeroGlide 超薄智能牙刷的信息
prompt = &quot;
Tell me about AeroGlide UltraSlim Smart Toothbrush by Boie
&quot;

# 模型输出了一个产品描述，看似真实，但实际这款牙刷并不存在。
response = &quot;
The AeroGlide UltraSlim Smart Toothbrush by Boie is a high-tech toothbrush that uses advanced sonic technology to provide a deep and thorough clean. It features a slim and sleek design that makes it easy to hold and maneuver, and it comes with a range of smart features that help you optimize your brushing routine.

One of the key features of the AeroGlide UltraSlim Smart Toothbrush is its advanced sonic technology, which uses high-frequency vibrations to break up plaque and bacteria on your teeth and gums. This technology is highly effective at removing even the toughest stains and buildup, leaving your teeth feeling clean and refreshed.

In addition to its sonic technology, the AeroGlide UltraSlim Smart Toothbrush also comes with a range of smart features that help you optimize your brushing routine. These include a built-in timer that ensures you brush for the recommended two minutes, as well as a pressure sensor that alerts you if you're brushing too hard.

Overall, the AeroGlide UltraSlim Smart Toothbrush by Boie is a highly advanced and effective toothbrush that is perfect for anyone looking to take their oral hygiene to the next level. With its advanced sonic technology and smart features, it provides a deep and thorough clean that leaves your teeth feeling fresh and healthy.
&quot;
</code></pre>
<p>需要我们使用课程中的一些技巧，避免在使用过程中模型出现<code>幻觉</code>。</p>
<h4 id="减少幻觉">减少幻觉</h4>
<ol>
<li>通过要求模型首先找到相关的引用</li>
<li>然后要求基于这些引用来回答问题</li>
</ol>
<h2 id="2-迭代">2. 迭代</h2>
<blockquote>
<p>待更新</p>
</blockquote>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[为何需要写技术方案？]]></title>
        <id>https://www.yiios.com/post/ji-zhu-fang-an/</id>
        <link href="https://www.yiios.com/post/ji-zhu-fang-an/">
        </link>
        <updated>2022-04-02T10:10:06.000Z</updated>
        <content type="html"><![CDATA[<p>作为从小团队出来的人，我之前并不能理解技术方案和相关的评审存在的价值。在我经历了几次技术方案评审和较大的协作项目时，有了一些自己的心得体会。</p>
<h3 id="1-管理预期">1 管理预期</h3>
<p>凡事预则立，不预则废。在工程中，最怕的就是不确定性，高度的不确定性意味着高度的风险。<br>
梳理技术方案就是在开发期前，通过理清技术方案，减少不确定性。<br>
评审通过的技术方案会指导整个开发工作。<br>
而同步给相关方后，通过描述路线，明确难点，又可以管理相关方的预期，使其对项目的预期和开发接近。</p>
<h3 id="2-寻找优化">2 寻找优化</h3>
<p>完(糊)成(弄)一个需求是非常简单的。<br>
一方面，需求稿和视觉稿不能把所有场景都列举出来，在未列举出来的地方自由发挥还是深入思考并合理处理都考验着开发的责任心。<br>
第二，页面卡顿/热区过小/手势冲突这些技术的细枝末节会对用户的体验产生很大的影响，用户会感知到这些问题但很难描述或者不会去描述，他们会选择用脚投票。<br>
当我们拿出一份细致的技术方案时，就会把这些细节中的魔鬼暴露出来，在自己和小伙伴的审视优化掉暴露出的问题。</p>
<h3 id="3-自我提升">3 自我提升</h3>
<p>编写和讲述技术方案，也是向别人传授对项目的理解和思考。这个过程会逼自己快速了解需求，也会增加对业务现状的理解，技术方案本身也沉淀出业务文档。<br>
同时，对这种编写和简述本身就是对自身软技能的提高。<br>
一个人的大脑思考过程是非常快的，一秒钟的灵感，可能要花一分钟去记录，而简述给别人理解可能需要一个小时的PPT。经过反复的总结和沟通的锻炼，才能领悟出适合自己的高效沟通方法。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[如何自签名苹果应用(IPA)并在手机运行]]></title>
        <id>https://www.yiios.com/post/ru-he-zi-qian-ming-ping-guo-ying-yong-ipabing-zai-shou-ji-yun-xing/</id>
        <link href="https://www.yiios.com/post/ru-he-zi-qian-ming-ping-guo-ying-yong-ipabing-zai-shou-ji-yun-xing/">
        </link>
        <updated>2022-04-02T10:03:19.000Z</updated>
        <content type="html"><![CDATA[<p><strong>背景：</strong></p>
<p>作为一个 iOS 开发，有时候会编写一些 iOS 小工具。这些工具如果要分发给别人去使用就非常麻烦。所以可以使用生成无签名的 IPA，然后引导别人使用自己的 Apple ID 给 IPA 文件签名使用。</p>
<p><strong>签名方法：</strong></p>
<p>1.安装爱思助手并打开，在选择“工具箱” - “IPA 签名”，打开签名工具页面。</p>
<figure data-type="image" tabindex="1"><img src="https://p5.music.126.net/obj/wo3DlcOGw6DClTvDisK1/5754694929/0551/7947/4ab1/f5bb9604e8563e3c87028d80ea7a41ee.jpg" alt="-w600" loading="lazy"></figure>
<p>2.选择“使用 Apple ID 签名 - 添加 Apple ID”，随后输入用于签名的 Apple ID、密码并选择或输入对应设备的设备标识（指签名后 IPA 文件要安装的设备）；</p>
<figure data-type="image" tabindex="2"><img src="https://p6.music.126.net/obj/wo3DlcOGw6DClTvDisK1/5754103142/b7aa/e76d/35eb/0ddc46e92aa66607f45c8ea175df6a18.jpg" alt="-w600" loading="lazy"></figure>
<p>3.检查无误后点击“确定”。建议操作前需要将 iOS 设备连接至爱思助手，并保证可以读出“设备标识”，如果未连接设备，需要手动输入设备标识。Apple ID 添加完成后下方列表就会显示签名信息；</p>
<figure data-type="image" tabindex="3"><img src="https://p6.music.126.net/obj/wo3DlcOGw6DClTvDisK1/5754103145/9ff2/40ac/7801/ace4106e92f5d7a891c6e7bea2a35eff.jpg" alt="-w600" loading="lazy"></figure>
<p>4.之后，添加需要签名的 IPA 文件并勾选 IPA 文件和用于签名的 Apple ID，点击“开始签名”即可，签名成功后就可以通过爱思助手安装该应用了。安装完成后，在 iOS 设备上首次打开前记得去“设置 - 通用 - 描述文件”内信任该应用。</p>
<figure data-type="image" tabindex="4"><img src="https://p6.music.126.net/obj/wo3DlcOGw6DClTvDisK1/5754103146/32d1/2bbf/6f7c/c389d67a13b0cb979bb962b6c8270d57.jpg" alt="-w600" loading="lazy"></figure>
<p>请务必注意，已签名的 IPA 文件和原文件保存路径可能并不相同，签名后应该点击“打开已签名 IPA 位置”按钮，可用于安装的已签名 IPA 文件都会储存在该目录下，请注意分辨。</p>
<figure data-type="image" tabindex="5"><img src="https://p6.music.126.net/obj/wo3DlcOGw6DClTvDisK1/5754103147/dca9/c542/6208/9c722a1576163cebef624b1c02d57861.jpg" alt="-w600" loading="lazy"></figure>
<p>5.获取到签名的ipa文件后，可以直接使用爱思助手安装进app，也可以放置在蒲公英等发布平台上远程安装。</p>
<figure data-type="image" tabindex="6"><img src="https://p5.music.126.net/obj/wo3DlcOGw6DClTvDisK1/5754841774/5268/aa4d/af92/e96fd53aee1856ca4a5adff2a9320c51.jpg" alt="-w600" loading="lazy"></figure>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[人体工学椅参数研究]]></title>
        <id>https://www.yiios.com/post/ren-ti-gong-xue-yi-can-shu-yan-jiu/</id>
        <link href="https://www.yiios.com/post/ren-ti-gong-xue-yi-can-shu-yan-jiu/">
        </link>
        <updated>2022-04-02T03:24:41.000Z</updated>
        <content type="html"><![CDATA[<h2 id="工学椅常见配置有哪些">工学椅常见配置有哪些</h2>
<ol>
<li>后仰阻尼调节</li>
<li>扶手升降</li>
<li>扶手多维度（3D/）4D/无极</li>
<li>前倾调节</li>
<li>腰部支撑高度（和椅背升降同理）</li>
<li>腰部支撑力度</li>
<li>后仰档位锁定</li>
<li>坐深调节</li>
<li>座椅升降调节</li>
<li>个别款式特色调节</li>
<li>附加内容：头枕（固定/多维度）、腿托</li>
<li>五星脚材质</li>
<li>滚轮（地板轮/地毯轮/廉价地板轮）</li>
</ol>
<blockquote>
<p>注释：后文为单品配置菜单，常规配置不列举（例如升降）。<br>
国产很多品牌喜欢做分体式靠背（双背/三背）实际跟坐感没有直接关系，甚至有些款式分界线存在感会比较强影响体验。国产很多后仰锁定是固定在某一档位，进口更多则为允许后仰至某一档位。国产扶手盖面大多比较生硬，进口品牌喜欢采用软质扶手，触感更舒适一些。进口4d扶手有些型号是无极4d，调节顺滑但缺少固定，不过国产4d大多采用档位也没有可靠固定。</p>
</blockquote>
<h2 id="国产品牌款式配置">国产品牌（款式配置）</h2>
<p>粗体为关键配置</p>
<h3 id="西昊">西昊</h3>
<ul>
<li>M56（海绵）:<strong>腰部支撑高度</strong>、<strong>后仰锁定</strong>、固定扶手、尼龙腿、廉价地板轮。</li>
<li>V1（网面）:<strong>腰部支撑高度及力度</strong>、<strong>4d扶手</strong>、<strong>后仰锁定</strong>、后仰阻尼（无操作杆）、<strong>铝合金腿</strong>、扶手跟随后仰、<strong>坐深调节</strong>、地板轮</li>
<li>M18（海绵）:<strong>腰部支撑高度及力度</strong>、<strong>升降扶手</strong>、<strong>后仰锁定</strong>、后仰阻尼（无操作杆））、铝合金腿、廉价地板轮</li>
</ul>
<h3 id="保友">保友</h3>
<ul>
<li>金豪系列b（网面）：<strong>腰部支撑高度（椅背高度调节）</strong>、<strong>3d扶手</strong>、<strong>后仰锁定</strong>、阻尼不可调、尼龙腿、地板轮</li>
<li>金豪e（网面）增加内容：铝合金腿、<strong>后仰阻尼</strong>、<strong>4d扶手</strong>、伪前倾、扶手跟随后仰、<strong>坐深调节</strong>、优质地板轮</li>
</ul>
<h3 id="ergomax">Ergomax</h3>
<ul>
<li>Evolution（网面）：<strong>腰部支撑高度（椅背高度）</strong>、<strong>4d扶手</strong>、<strong>后仰阻尼</strong>、后仰锁定、<strong>坐深调节</strong>、扶手跟随后仰、优质地板轮</li>
<li>Evolution2（网面）增加内容：<strong>腰部支撑力度三档调节</strong></li>
</ul>
<h3 id="网易严选">网易严选</h3>
<ul>
<li>网易严选（网面）：<strong>腰部支撑高度</strong>、<strong>升降扶手</strong>、尼龙腿、阻尼不可调、廉价地板轮</li>
<li>网易严选3D悬挂（网面）：<strong>腰部支撑高度</strong>、尼龙腿、<strong>升降旋转扶手</strong>、<strong>后仰锁定</strong>、<strong>坐深调节</strong>、地板轮</li>
</ul>
<h3 id="有谱">有谱</h3>
<ul>
<li>蝴蝶（网面）：坐垫伪联动、铝合金腿、<strong>腰部支撑高度</strong>、<strong>扶手升降</strong>、<strong>后仰阻尼</strong>、档位锁定、<strong>坐深</strong>、优质地板轮、扶手跟随后仰</li>
</ul>
<h3 id="普格瑞司">普格瑞司</h3>
<ul>
<li>Hp-08（海绵）：<strong>扶手升降</strong>、阻力调节（无操作杆）、地板轮、尼龙腿</li>
</ul>
<h3 id="国产品牌总结">国产品牌总结：</h3>
<p>对于国产比较贵的高级工学椅，腰部支撑高度、4d扶手、坐深调节、档位锁定、后仰阻尼、头枕几乎是标配（例如保友金豪e、evolution）<br>
国产比较有特色的型号功能：</p>
<ul>
<li>evolution2： 腰部支撑三档可调</li>
<li>有谱蝴蝶： 滑翔功能、大角度放躺以及扶手按钮实现升降及后仰锁定（类似进口的contessa2，但是牺牲了4d功能，更类似于是结合了leap和contessa2的一个四不像产品）</li>
<li>普格瑞斯： 背部还算舒适（但有着断背王的称号）</li>
<li>金豪e： 坐垫可以伪前倾（类似进口的fern）。为什么有些功能用了类似而不是相同，后面说到进口椅子会提到。</li>
</ul>
<h2 id="进口品牌">进口品牌</h2>
<p>注释进口品牌大多数型号配置为选配</p>
<h3 id="赫曼米勒">赫曼米勒</h3>
<ul>
<li>Sayl（海绵）：<strong>后仰阻尼</strong>、<strong>4d扶手</strong>、前倾、档位锁定、<strong>坐深</strong>、扶手跟随后仰、尼龙腿、优质地毯轮</li>
<li>Embody（结构/海绵）：<strong>后仰阻尼</strong>、<strong>2d扶手</strong>、档位锁定、<strong>坐深</strong>、<strong>椅背夹角调节（会影响到腰部支撑）</strong>、扶手跟随后仰、铝合金腿、优质地毯轮</li>
<li>Aeron2（网面）：<strong>后仰阻尼</strong>、<strong>4d扶手</strong>（有档位但类似无极）、<strong>前倾</strong>、档位锁定、<strong>腰部支撑力度</strong>、扶手跟随后仰、<strong>骶骨支撑</strong>、铝合金腿、优质地毯轮</li>
</ul>
<h3 id="世楷">世楷</h3>
<ul>
<li>Leap（海绵）：<strong>后仰阻尼</strong>、<strong>座椅联动滑行</strong>、<strong>无极4d扶手</strong>、档位锁定、<strong>坐深</strong>、<strong>腰部支撑高度</strong>、<strong>下半部腰部支撑力度（坚实度调节）</strong>、尼龙腿、中性轮、扶手不跟随后仰</li>
<li>Gesture（海绵）：<strong>后仰阻尼</strong>、<strong>无极4d机械臂扶手</strong>、档位锁定、<strong>坐深</strong>、腰部支撑高度、<strong>优秀的头枕</strong>、尼龙腿、中性轮、扶手不跟随后仰</li>
</ul>
<h3 id="优门设">优门设</h3>
<ul>
<li>Liberty（海绵）：<strong>扶手升降</strong>、坐椅联动、扶手跟随后仰、尼龙腿、优质地毯轮</li>
<li>World（织物）：<strong>扶手升降</strong>、扶手跟随后仰、尼龙腿、优质地毯轮</li>
<li>Ferrdom（海绵）：<strong>扶手升降</strong>、扶手跟随后仰、铝合金腿、优质地毯轮</li>
</ul>
<h3 id="海沃氏">海沃氏</h3>
<ul>
<li>Very（海绵）：<strong>后仰阻尼</strong>、<strong>4d扶手</strong>、扶手跟随后仰、档位锁定、<strong>前倾</strong>、<strong>坐深</strong>、<strong>腰部支撑高度及力度</strong>、铝合金腿、优质地毯轮</li>
<li>Zody（海绵）：<strong>后仰阻尼</strong>、<strong>4d扶手</strong>、扶手跟随后仰、档位锁定、<strong>前倾</strong>、<strong>坐深</strong>、<strong>腰部支撑高度及力度</strong>、<strong>骶骨支撑</strong>、铝合金腿、优质地毯轮</li>
<li>Fern（海绵）：<strong>后仰阻尼</strong>、<strong>无极4d扶手</strong>、扶手跟随后仰、档位锁定、伪前倾、<strong>坐深</strong>、<strong>腰部支撑高度</strong>、铝合金腿、优质地毯轮</li>
</ul>
<h3 id="国誉">国誉</h3>
<ul>
<li>Ing360（海绵）：<strong>360度摇摆</strong>、<strong>3d扶手</strong>、尼龙腿、优质地毯轮</li>
<li>Airfort（海绵）：<strong>3d扶手</strong>、铝合金腿、<strong>腰托高度及力度</strong>、优质地毯轮、<strong>档位锁定</strong></li>
</ul>
<h3 id="冈村">冈村</h3>
<ul>
<li>Portone（海绵）：<strong>腰部支撑高度</strong>、<strong>3d扶手</strong>、<strong>坐深</strong>、铝合金腿、疑似地板轮（没买过）、<strong>档位锁定</strong></li>
<li>Sylphy light（海绵）：<strong>3d扶手</strong>、<strong>坐深调节</strong>、<strong>后仰阻力调节</strong>、档位锁定、铝合金腿、优质地毯轮</li>
<li>Contessa2（网面）：<strong>后仰阻力调节</strong>、档位锁定、<strong>坐深</strong>、<strong>4d扶手</strong>、<strong>腰部支撑高度</strong>、铝合金腿、优质地毯轮</li>
</ul>
<h3 id="伊藤喜">伊藤喜</h3>
<ul>
<li>Spina（海绵）：<strong>3d扶手</strong>、后仰档位锁定、<strong>后仰阻尼调节</strong>、被动下浅坐垫、优质地毯轮次、铝合金腿</li>
</ul>
<h3 id="喜迪世">喜迪世</h3>
<ul>
<li>T50（海绵/air版本为网面）：<strong>腰部支撑高度及力度</strong>、<strong>坐深</strong>、伪前倾、<strong>3d扶手</strong>、优质地板轮、后仰锁定、尼龙腿</li>
</ul>
<h3 id="进口品牌总结">进口品牌总结：</h3>
<p>进口高端椅子大部分功能都是标配（尤其是旗舰款）例如坐深、后仰阻尼、档位锁定。<br>
但是！依然有部分型号具有自己的特色<br>
赫曼米勒：<br>
sayl： 定价不算很高，有前倾功能（虽然不太好用）<br>
Aeron2： 很好的前倾，进口高端椅子少有的弹性网面（虽然有些夹腿），三个尺寸可以选择（解决坐深不可调的缺点）<br>
embody： 可调椅背和坐垫的夹角、椅背为结构性支撑</p>
<p>世楷：<br>
leap： 坐垫联动（有谱蝴蝶很像leap的联动但是蝴蝶是个伪联动，解锁之后其实是一根弹簧拉着坐垫而leap则是纯粹的机械结构联动）、上下背支撑分体调节<br>
gesture： 头枕调节范围非常大、机械臂扶手很好玩</p>
<p>优门设：<br>
全系列产品几乎都是自动无需太多调节，也没什么可调选项，更适合放在会议室给不同体型的人直接使用</p>
<p>海沃氏：<br>
very： 价格较为亲民、用料足、前倾好用<br>
zody： 用料足、前倾好用<br>
fern： 椅背为结构性支撑</p>
<p>国誉：<br>
Ing360： 椅随身动，自由度比较高<br>
airfort： 空气增压腰托</p>
<p>冈村：<br>
Contessa2： 扶手下有调节开关并且扶手支持3d</p>
<p>伊藤喜：<br>
Spian：  坐垫被动下浅（感觉没啥用但是挺好玩）</p>
]]></content>
    </entry>
</feed>